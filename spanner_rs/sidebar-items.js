window.SIDEBAR_ITEMS = {"enum":[["Error",""],["TimestampBound","Specifies the bounds withing wich to make reads in Spanner."],["Type","An enumeration of all Cloud Spanner data types."],["Value","An enumeration of the Cloud Spanner values for each supported data type."]],"struct":[["Client","An asynchronous Cloud Spanner client."],["Config","Configuration for building a [`Client`]."],["ConfigBuilder","Builder for `Config`."],["DatabaseId","The resource that identifies a Cloud Spanner database in a particular Cloud Spanner instance."],["InstanceId","The resource that identifies a Cloud Spanner instance in a particular GCP project."],["ProjectId","The resource that identifies a particular GCP project."],["ResultSet","A result set is returned by Cloud Spanner when executing SQL queries."],["Row","A row of a result set returned by Cloud Spanner."],["SessionPoolConfig","Configuration for the internal Cloud Spanner session pool."],["SessionPoolConfigBuilder","Builder for `SessionPoolConfig`."],["Statement","A single DML statement that can be used in a batch of DML statements using [`TransactionContext::execute_updates`]"],["Struct","The Cloud Spanner value for the `Struct` type."],["StructType","The Cloud Spanner `Struct` type which is composed of optionally named fields and their data type."],["TxRunner","Allows running read/write transactions against Cloud Spanner."]],"trait":[["FromSpanner","A trait for Rust types that can be converted from Cloud Spanner values."],["ReadContext","Defines the interface to read data out of Cloud Spanner."],["RowIndex","A trait implemented by types that can index into a row."],["SpannerResource","A trait for identifiable resources within Cloud Spanner."],["ToSpanner","A trait for Rust types that can be converted to Cloud Spanner values."],["TransactionContext","Defines the interface to read from and write into Cloud Spanner."]]};